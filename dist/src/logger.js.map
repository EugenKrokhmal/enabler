{"version":3,"file":"logger.js","sourceRoot":"","sources":["../../src/logger.ts"],"names":[],"mappings":";;AAAA,+BAA0B;AAGlB,IAAA,iBAAG,EAAE,mBAAI,CAAa;AAC9B,IAAM,KAAK,GAAG,eAAK,CAAC,IAAI,CAAC,GAAG,CAAC;AAC7B,IAAM,OAAO,GAAG,eAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;AACxC,IAAM,OAAO,GAAG,eAAK,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;AACvC,IAAM,MAAM,GAAG,eAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC/B,IAAA,qCAAS,CAAW;AAE5B,SAAS,eAAe,CAAC,qBAA0B;IACjD,OAAO,MAAM,CAAC,MAAM,CAAC,qBAAqB,CAAC,CAAC,KAAK,CAC/C,UAAC,QAAa,IAAK,OAAA,QAAQ,CAAC,MAAM,KAAK,CAAC,EAArB,CAAqB,CACzC,CAAC;AACJ,CAAC;AAED,SAAS,gBAAgB,CAAC,YAAoB,EAAE,QAAoB;IAClE,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE;QACpB,OAAO;KACR;IAED,GAAG,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,CAAC;IAC7B,GAAG,EAAE,CAAC;IAEN,QAAQ,CAAC,OAAO,CAAC,UAAC,QAAkB;QAClC,IAAM,gBAAgB,GAAM,MAAM,CAAC,UAAU,CAAC,SAAI,QAAQ,CAAC,OAAS,CAAC;QACrE,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC;IAC/C,CAAC,CAAC,CAAC;AACL,CAAC;AAED,SAAgB,aAAa,CAAC,qBAA0B;IACtD,IAAI,UAAU,GAAG,CAAC,CAAC;IAEnB,IAAI,eAAe,CAAC,qBAAqB,CAAC,EAAE;QAC1C,GAAG,EAAE,CAAC;QACN,GAAG,CAAC,OAAO,CAAC,wBAAwB,CAAC,CAAC,CAAC;QACvC,OAAO;KACR;IAED,GAAG,EAAE,CAAC;IACN,IAAI,CAAC,OAAO,CAAC,kCAAkC,CAAC,CAAC,CAAC;IAClD,GAAG,EAAE,CAAC;IAEN,MAAM,CAAC,OAAO,CAAC,qBAAqB,CAAC,CAAC,OAAO,CAAC,UAAC,QAAa;QAC1D,IAAM,WAAW,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;QAChC,IAAM,KAAK,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;QAC1B,UAAU,IAAI,KAAK,CAAC,MAAM,CAAC;QAE3B,gBAAgB,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;IACvC,CAAC,CAAC,CAAC;IAEH,GAAG,EAAE,CAAC;IACN,IAAI,CAAC,KAAK,CAAC,YAAK,UAAU,eAAY,CAAC,CAAC,CAAC;AAC3C,CAAC;AAvBD,sCAuBC","sourcesContent":["import chalk from 'chalk';\nimport { IWarning } from './models';\n\nconst { log, warn } = console;\nconst error = chalk.bold.red;\nconst warning = chalk.keyword('orange');\nconst success = chalk.keyword('green');\nconst yellow = chalk.keyword('yellow');\nconst { underline } = chalk;\n\nfunction isWarningsEmpty(templatesWithWarnings: any): boolean {\n  return Object.values(templatesWithWarnings).every(\n    (warnings: any) => warnings.length === 0\n  );\n}\n\nfunction printForTemplate(templateName: string, warnings: IWarning[]): void {\n  if (!warnings.length) {\n    return;\n  }\n\n  log(underline(templateName));\n  log();\n\n  warnings.forEach((warnData: IWarning) => {\n    const templateWarnInfo = `${yellow('Line: %s')} ${warnData.message}`;\n    warn(error(templateWarnInfo), warnData.line);\n  });\n}\n\nexport function printWarnings(templatesWithWarnings: any): void {\n  let totalWarns = 0;\n\n  if (isWarningsEmpty(templatesWithWarnings)) {\n    log();\n    log(success('A11Y issues not found.'));\n    return;\n  }\n\n  log();\n  warn(warning('Potential accessibility issues: '));\n  log();\n\n  Object.entries(templatesWithWarnings).forEach((template: any) => {\n    const templateUrl = template[0];\n    const warns = template[1];\n    totalWarns += warns.length;\n\n    printForTemplate(templateUrl, warns);\n  });\n\n  log();\n  warn(error(`âœ– ${totalWarns} problems.`));\n}\n\n"]}