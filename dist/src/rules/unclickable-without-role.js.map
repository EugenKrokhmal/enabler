{"version":3,"file":"unclickable-without-role.js","sourceRoot":"","sources":["../../../src/rules/unclickable-without-role.ts"],"names":[],"mappings":";;AAAA,kCAAwC;AACxC,0CAAqC;AAErC,SAAwB,sBAAsB,CAAC,CAAM,EAAC,OAAe;IACnE,OAAO,IAAI,mBAAS,CAAC;QACnB,SAAS,EAAE,CAAC;QACZ,OAAO,SAAA;QACP,SAAS,EAAE,GAAG;QACd,WAAW,EAAE,CAAC,OAAO,CAAC;QACtB,SAAS,EAAE,UAAC,KAAU,EAAE,KAAe,EAAE,MAAgB;YACvD,IAAM,iBAAiB,GAAG;gBACxB,SAAS;gBACT,sBAAsB;gBACtB,qBAAqB;gBACrB,YAAY;gBACZ,QAAQ;gBACR,QAAQ;aACT,CAAC;YACF,IAAM,WAAW,GAAG,iBAAiB,CAAC,IAAI,CAAC,UAAA,GAAG,IAAI,OAAA,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,EAAb,CAAa,CAAC,CAAC;YACjE,IAAM,QAAQ,GAAG,oBAAY,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;YAC7C,IAAM,aAAa,GAAG,KAAK,CAAC,EAAE,CAAC,eAAe,CAAC,CAAC;YAEhD,OAAO,CAAC,WAAW,IAAI,QAAQ,IAAI,CAAC,aAAa,CAAC;QACpD,CAAC;QACD,cAAc,EAAE,wEAAwE;KACzF,CAAC,CAAC;AACL,CAAC;AAvBD,yCAuBC","sourcesContent":["import { hasAttribute } from '../utils';\nimport Validator from '../validator';\n\nexport default function unclickableWithoutRole($: any,content: string) {\n  return new Validator({\n    $template: $,\n    content,\n    selectors: '*',\n    assocEvents: ['click'],\n    isInvalid: ($elem: any, attrs: string[], events: string[]) => {\n      const clickableElements = [\n        'a[href]',\n        'input[type=\"submit\"]',\n        'input[type=\"image\"]',\n        'label[for]',\n        'select',\n        'button'\n      ];\n      const isClickable = clickableElements.some(sel => $elem.is(sel));\n      const hasClick = hasAttribute($elem, events);\n      const hasRoleButton = $elem.is('[role=button]');\n\n      return !isClickable && hasClick && !hasRoleButton;\n    },\n    warningMessage: 'Unclickable elements with click listener should have a role attribute.'\n  });\n}\n"]}